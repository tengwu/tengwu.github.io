#+OPTIONS: author:nil ^:{}
#+HUGO_BASE_DIR: ../../../hugo
#+HUGO_SECTION: post/2023/04
#+HUGO_CUSTOM_FRONT_MATTER: :toc true
#+HUGO_AUTO_SET_LASTMOD: t
#+HUGO_DRAFT: false
#+DATE: [2023-04-02 Sun 14:12]
#+TITLE: 使用flex, bison, llvm实现编译器
#+HUGO_TAGS: 编译 LLVM
#+HUGO_CATEGORIES: 编译 LLVM

* 2023年实现编译器竟然如此简单
这周跟着[[https://llvm.org/docs/tutorial/][LLVM官方教程]]学习了一下 =LLVM= 的基础知识,实现了一个可以跑起来的编译器,当然其实就是把人家提供的代码稍微改一改,不理解的地方单步跟着调一下.

抱着学习 =LLVM= 的目的,周末突然产生了用 =flex=, =bison=, =LLVM= 实现一个编译器的想法,网上搜索了一下,十几年前就有人这样做了,索性就直接跟着别人的博客学习一下.还是先把别人的代码跑起来,读代码,不懂的地方单步跟一下,如果有什么想法的话,再把别人的代码魔改一下.

* 参考
1. https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/
2. https://jeremyxu2010.github.io/2020/10/动手写个玩具编译器/#heading-1
   =链接2= 参考了 =链接1=, =链接1= 是2009年写的一篇博客,基于 =LLVM 2.6=, =链接2= 是2020年写的一篇博客,基于更高版本的 =LLVM=.
   现在是2023年4月2日, =LLVM= 稳定版本是16.0.0,也许我可以试着把 =链接2= 的代码改一改,适配 =LLVM 16.0.0=.
